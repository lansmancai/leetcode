class Solution {
    public int rob(int[] nums) {
        if(nums.length < 3 ) {
            return nums.length == 1? nums[0] : Math.max(nums[0], nums[1]);
        }
        return Math.max(robs(nums,0,  nums.length - 2), robs(nums, 1, nums.length - 1));
    }
    public int robs(int[] nums, int start, int end) {
        if(end - start < 2 ) {
            return end - start == 0? nums[start] : Math.max(nums[start], nums[end]);
        }
        int[] maxm = {nums[start], Math.max(nums[start], nums[start + 1])};
        for(int i = 2; i <= end - start ; i++) {
            maxm[i % 2] = Math.max(maxm[((i % 2) + 1) % 2], maxm[i % 2] + nums[start + i]);
        }
        return maxm[(end - start) % 2];
    }
    public static void main(String[] args) {
        Solution st = new Solution();
        int[] numssss = {2,7,9,3,1};
        System.out.println(st.rob(numssss));
    }
}
