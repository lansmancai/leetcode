import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

public class ArrayTest {
    public List<List<Integer>> Three(int[] nums) {
        List<List<Integer>> result = new LinkedList<List<Integer>>();
        if (nums.length > 2) {
            Arrays.sort(nums);
            for (int i = 0; i < nums.length - 2; i++) {
                if (nums[i] > 0) break;
                if (i > 0 && nums[i] == nums[i-1]) continue;
                int p = i + 1;
                int q = nums.length - 1;
                while(p < q) {
                    if(nums[p] + nums[q] + nums[i] == 0) {
                        //System.out.println(p);
                        //System.out.println(i);
                        //System.out.println(q);
                        result.add(Arrays.asList(nums[i], nums[p], nums[q]));
                        p++;
                        while(nums[p] == nums[p - 1] && p < nums.length - 1) {
                            p++;
                        }
                        q--;
                        while(nums[q] == nums[q + 1] && q > p ) {
                            q--;
                        }

                    }
                    else if(nums[p] + nums[q] + nums[i] < 0) {
                        p++;
                    }
                    else {
                        q--;
                    }
                }
            }
        }
        return result;
    }
    public static void main(String[] args) {
        int[] nums = {-1, 0, 1, 2, -1, -4};
        ArrayTest at = new ArrayTest();
        List<List<Integer>> result = at.Three(nums);
        System.out.println(Arrays.toString(result.toArray()));
    }
}
